#  Template NodeJS build

#  This template allows you to validate your NodeJS code.
#  The workflow allows running tests and code linting on the default branch.

image: node:16.14.2
options:
  docker: true

definitions:
  services:
    docker:
      image: tjsrowe/bb-dind-aws:latest
      memory: 3072
      variables:
        DOCKER_OPTS: '--insecure-registry=172.29.0.214:5000'

pipelines:
  default:
  - stage:
      name: Build, test and deploy
      steps:
      - step:
          services: [docker]
          runs-on:
            - 'self.hosted'
            - 'linux'
          name: Build app Docker image
          script:
            - /bin/sh scripts/ci/runci.sh
          caches:
            - docker
          environment:
            BITBUCKET_REPO_SLUG: $BITBUCKET_REPO_SLUG
            BITBUCKET_COMMIT: $BITBUCKET_COMMIT
  - stage:
      name: Publish dev containers
      steps:
      - step:
          runs-on:
          - 'self.hosted'
          - 'linux'
          image: tjsrowe/bb-dind-aws:latest
          variables:
            DOCKER_OPTS: '--insecure-registry=172.29.0.214:5000'
          name: Deploy to dev
          script:
          - IMAGE_NAME=absee
          - COMMIT_IMAGE=$IMAGE_NAME:$BITBUCKET_COMMIT
          - REGISTRY_COMMIT=public.ecr.aws/$AWS_USER/$COMMIT_IMAGE
          - aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws/$AWS_USER
          - docker pull 172.29.0.214:5000/absee/$IMAGE_NAME:$BITBUCKET_COMMIT
          - docker tag 172.29.0.214:5000/absee/$IMAGE_NAME:$BITBUCKET_COMMIT $IMAGE_NAME:$BITBUCKET_COMMIT
          - docker tag 172.29.0.214:5000/absee/$IMAGE_NAME:$BITBUCKET_COMMIT $REGISTRY_COMMIT
          - docker tag 172.29.0.214:5000/absee/$IMAGE_NAME:$BITBUCKET_COMMIT public.ecr.aws/$AWS_USER/$IMAGE_NAME:latest-dev
          - docker push $REGISTRY_COMMIT
          - docker push public.ecr.aws/$AWS_USER/$IMAGE_NAME:latest-dev
  - stage:
      name: Deploy dev environment
      deployment: test
      trigger: manual
      steps:
      - step:
          runs-on:
          - 'self.hosted'
          - 'linux'
          name: Run database migration on dev
          image: tjsrowe/bb-dind-aws:latest
          variables:
            DOCKER_OPTS: '--insecure-registry=172.29.0.214:5000'
          script:
          - docker pull 172.29.0.214:5000/absee/$IMAGE_NAME-dbmigrate:$BITBUCKET_COMMIT
          - docker run -e PRISMA_DATABASE_URL=$PRISMA_DEV_DATABASE_URL --rm --name absee-migrate -t 172.29.0.214:5000/absee/$IMAGE_NAME-dbmigrate:$BITBUCKET_COMMIT
  - stage:
      name: Publish prod containers
      deployment: prod
      trigger: manual
      steps:
      - step:
          runs-on:
          - 'self.hosted'
          - 'linux'
          image: tjsrowe/bb-dind-aws:latest
          variables:
            DOCKER_OPTS: '--insecure-registry=172.29.0.214:5000'
          name: Tag image as prod
          script:
          - IMAGE_NAME=absee
          - COMMIT_IMAGE=$IMAGE_NAME:$BITBUCKET_COMMIT
          - REGISTRY_COMMIT=public.ecr.aws/$AWS_USER/$COMMIT_IMAGE
          - aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws/$AWS_USER
          - docker pull 172.29.0.214:5000/absee/$IMAGE_NAME:$BITBUCKET_COMMIT
          - docker tag 172.29.0.214:5000/absee/$IMAGE_NAME:$BITBUCKET_COMMIT public.ecr.aws/$AWS_USER/$IMAGE_NAME:latest
          - docker push public.ecr.aws/$AWS_USER/$IMAGE_NAME:latest
  